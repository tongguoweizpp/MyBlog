# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-16 22:10
from __future__ import unicode_literals

import DjangoUeditor.models
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(default='image/default.png', upload_to='image/%Y/%m', verbose_name='头像')),
                ('nick_name', models.CharField(default='', max_length=50, verbose_name='昵称')),
                ('occupation', models.CharField(default='', max_length=20, verbose_name='职业')),
                ('native_place', models.CharField(default='', max_length=10, verbose_name='籍贯')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('about_me_data', models.CharField(default='', max_length=500, verbose_name='基本资料')),
                ('about_me_education', models.CharField(default='', max_length=500, verbose_name='教育经历')),
                ('about_me_work', models.CharField(default='', max_length=500, verbose_name='工作经验')),
                ('about_me_evaluation', models.CharField(default='', max_length=500, verbose_name='自我点评')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=6, verbose_name='性别')),
                ('nation', models.CharField(default='汉族', max_length=20, verbose_name='民族')),
                ('address', models.CharField(default='', max_length=100, verbose_name='地址')),
                ('signature', models.CharField(default='在博客的搭建上我付出了自己的心血与汗水，这就和人生一样interesting...', max_length=200, verbose_name='个性签名')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '个人信息',
                'verbose_name_plural': '个人信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('image', models.ImageField(upload_to='banner/%Y/%m', verbose_name='轮播图')),
                ('url', models.URLField(verbose_name='访问地址')),
                ('index', models.IntegerField(default=100, verbose_name='顺序')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '轮播图',
                'verbose_name_plural': '轮播图',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='童国伟', max_length=6, verbose_name='作者')),
                ('title', models.CharField(max_length=50, verbose_name='文章名')),
                ('abstract', models.CharField(blank=True, max_length=200, null=True, verbose_name='摘要')),
                ('content', DjangoUeditor.models.UEditorField(default='', verbose_name='文章内容')),
                ('image_url', models.CharField(default='/static/images/default.jpg', max_length=100, verbose_name='图片地址')),
                ('click_nums', models.IntegerField(default=0, verbose_name='浏览量')),
                ('comment', models.CharField(blank=True, max_length=50, null=True, verbose_name='评论')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '博客文章',
                'verbose_name_plural': '博客文章',
            },
        ),
        migrations.CreateModel(
            name='Essay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '随笔',
                'verbose_name_plural': '随笔',
            },
        ),
        migrations.CreateModel(
            name='MessageBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='姓名')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('address', models.CharField(max_length=100, verbose_name='地址')),
                ('message', models.CharField(max_length=500, verbose_name='留言')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '留言板',
                'verbose_name_plural': '留言板',
            },
        ),
        migrations.CreateModel(
            name='PythonBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': 'Python博客',
                'verbose_name_plural': 'Python博客',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(db_index=True, max_length=30, unique=True)),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'ordering': ['-add_time'],
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='essay',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Essay', verbose_name='随笔'),
        ),
        migrations.AddField(
            model_name='blog',
            name='python_blog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.PythonBlog', verbose_name='Python博客'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tags',
            field=models.ManyToManyField(blank=True, to='users.Tag', verbose_name='标签'),
        ),
    ]
